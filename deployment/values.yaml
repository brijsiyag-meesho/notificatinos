# Default values for deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry-1.docker.io/brijsiyag/notifications
  pullPolicy: IfNotPresent
  tag: "1.0.9"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#  limits:
#     cpu: 100m
#     memory: 128Mi
#  requests:
#     cpu: 100m
#     memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

mysql:
  enabled: true
  auth:
    rootPassword: "rootpassword"
    createDatabase: true
    database: "notifications"
    username: "user"
    password: "password"
  initdbScripts:
    whitelist.sh: |
      #!/bin/bash
      echo "Do something."

imiConnect:
  apiKey: api_key
  domain: https://api.imiconnect.in
  url: https://api.imiconnect.in/resources/v1/messaging

kafka:
  fullnameOverride: "kafka"
  nameOverride: "kafka"
  listeners:
    client:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
    interbroker:
      protocol: PLAINTEXT
    external:
      protocol: PLAINTEXT
  broker:
    replicaCount: 0
  controller:
    replicaCount: 1
  provisioning:
    enabled: true
    topics:
     - name: sms-events
       partitions: 1
       replicationFactor: 1
       config:
         max.message.bytes: 64000
         flush.messages: 1
  extraConfig: |
    offsets.topic.replication.factor=1
    transaction.state.log.replication.factor=1


redis:
  replica:
    replicaCount: 1
  database: 0
  auth:
    enabled: false

elasticsearch:
  master:
    replicaCount: 1
  data:
    replicaCount: 1
  coordinating:
    replicaCount: 1
  ingest:
    replicaCount: 1
  global:
    kibanaEnabled: true